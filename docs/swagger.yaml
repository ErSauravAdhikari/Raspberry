basePath: /api/
definitions:
  rasberry.ErrorResponse:
    properties:
      reason:
        type: string
      type:
        type: string
    type: object
  rasberry.ExecuteTaskRequest:
    properties:
      params:
        $ref: '#/definitions/rasberry.TaskParams'
    type: object
  rasberry.GenericResponse:
    additionalProperties: true
    type: object
  rasberry.ScheduleInfo:
    properties:
      next_execution_ts:
        type: integer
      params:
        additionalProperties: true
        type: object
      schedule:
        type: string
    type: object
  rasberry.TaskExecution:
    properties:
      duration:
        type: string
      end_time:
        type: string
      id:
        type: integer
      params:
        additionalProperties: true
        type: object
      start_time:
        type: string
      status:
        type: string
      task_name:
        type: string
    type: object
  rasberry.TaskInfo:
    properties:
      schedules:
        items:
          $ref: '#/definitions/rasberry.ScheduleInfo'
        type: array
      task_name:
        type: string
    type: object
  rasberry.TaskParams:
    additionalProperties: true
    type: object
  rasberry.TaskRunLog:
    properties:
      id:
        type: integer
      level:
        type: string
      message:
        type: string
      taskRunID:
        type: integer
      timestamp:
        type: string
    type: object
  rasberry.getTaskExecutionsResponse:
    properties:
      task_executions:
        items:
          $ref: '#/definitions/rasberry.TaskExecution'
        type: array
    type: object
  rasberry.getTaskRunLogResponse:
    properties:
      logs:
        items:
          $ref: '#/definitions/rasberry.TaskRunLog'
        type: array
    type: object
info:
  contact: {}
  description: This is a simple task scheduler API.
  title: Raspberry API
  version: "1.0"
paths:
  /:
    get:
      description: Start the API server to manage tasks and schedules
      produces:
      - application/json
      responses:
        "200":
          description: API server started
          schema:
            type: string
      summary: Start API server
  /execution/{id}/cancel:
    post:
      description: Cancel a specific task execution by its ID
      parameters:
      - description: Task Execution ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
      summary: Cancel a specific task execution by ID
      tags:
      - Executions
  /task/{name}/execute:
    post:
      consumes:
      - application/json
      description: Execute a specified task by its name with the provided parameters
      parameters:
      - description: Task Name
        in: path
        name: name
        required: true
        type: string
      - description: Task Parameters
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/rasberry.ExecuteTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Task executed successfully
          schema:
            $ref: '#/definitions/rasberry.GenericResponse'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/rasberry.ErrorResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/rasberry.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/rasberry.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Execute a task by name
  /task/{name}/executions:
    get:
      description: Get all executions for a specific task by name
      parameters:
      - description: Task Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rasberry.getTaskExecutionsResponse'
            type: array
      summary: Get all executions for a specific task
      tags:
      - Executions
  /task_run/{id}/logs:
    get:
      description: Get all logs for a specific task run by ID with pagination and
        log level filtering
      parameters:
      - description: Task Run ID
        in: path
        name: id
        required: true
        type: integer
      - default: info
        description: Log level filter
        enum:
        - info
        - debug
        - error
        - success
        - all
        in: query
        name: level
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Page size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rasberry.getTaskRunLogResponse'
            type: array
      summary: Get all logs for a specific task run
      tags:
      - Logs
  /tasks:
    get:
      description: Get details of all registered tasks and their schedules
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rasberry.TaskInfo'
            type: array
      summary: Get all registered tasks and their schedules
      tags:
      - Task
securityDefinitions:
  ApiKeyAuth:
    in: query
    name: api_key
    type: apiKey
swagger: "2.0"
