// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Start the API server to manage tasks and schedules",
                "produces": [
                    "application/json"
                ],
                "summary": "Start API server",
                "responses": {
                    "200": {
                        "description": "API server started",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/execution/{id}/cancel": {
            "post": {
                "description": "Cancel a specific task execution by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Executions"
                ],
                "summary": "Cancel a specific task execution by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task Execution ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/task/{name}/execute": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Execute a specified task by its name with the provided parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Execute a task by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task Parameters",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rasberry.ExecuteTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task executed successfully",
                        "schema": {
                            "$ref": "#/definitions/rasberry.GenericResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/rasberry.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/rasberry.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rasberry.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/{name}/executions": {
            "get": {
                "description": "Get all executions for a specific task by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Executions"
                ],
                "summary": "Get all executions for a specific task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rasberry.getTaskExecutionsResponse"
                            }
                        }
                    }
                }
            }
        },
        "/task_run/{id}/logs": {
            "get": {
                "description": "Get all logs for a specific task run by ID with pagination and log level filtering",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Get all logs for a specific task run",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task Run ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "info",
                            "debug",
                            "error",
                            "success",
                            "all"
                        ],
                        "type": "string",
                        "default": "info",
                        "description": "Log level filter",
                        "name": "level",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rasberry.getTaskRunLogResponse"
                            }
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "Get details of all registered tasks and their schedules",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Get all registered tasks and their schedules",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rasberry.TaskInfo"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rasberry.ErrorResponse": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "rasberry.ExecuteTaskRequest": {
            "type": "object",
            "properties": {
                "params": {
                    "$ref": "#/definitions/rasberry.TaskParams"
                }
            }
        },
        "rasberry.GenericResponse": {
            "type": "object",
            "additionalProperties": true
        },
        "rasberry.ScheduleInfo": {
            "type": "object",
            "properties": {
                "next_execution_ts": {
                    "type": "integer"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": true
                },
                "schedule": {
                    "type": "string"
                }
            }
        },
        "rasberry.TaskExecution": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": true
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "task_name": {
                    "type": "string"
                }
            }
        },
        "rasberry.TaskInfo": {
            "type": "object",
            "properties": {
                "schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rasberry.ScheduleInfo"
                    }
                },
                "task_name": {
                    "type": "string"
                }
            }
        },
        "rasberry.TaskParams": {
            "type": "object",
            "additionalProperties": true
        },
        "rasberry.TaskRunLog": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "taskRunID": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "rasberry.getTaskExecutionsResponse": {
            "type": "object",
            "properties": {
                "task_executions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rasberry.TaskExecution"
                    }
                }
            }
        },
        "rasberry.getTaskRunLogResponse": {
            "type": "object",
            "properties": {
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rasberry.TaskRunLog"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "api_key",
            "in": "query"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/",
	Schemes:          []string{},
	Title:            "Raspberry API",
	Description:      "This is a simple task scheduler API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
